<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ardika Rommy Sanjaya</title>
    <description>Catatan ngopek suka2.</description>
    <link>https://www.ardikars.com/</link>
    <atom:link href="https://www.ardikars.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 10 Jul 2020 04:58:49 +0000</pubDate>
    <lastBuildDate>Fri, 10 Jul 2020 04:58:49 +0000</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Install Docker CE on Ubuntu 20.04</title>
        <description>&lt;h3 id=&quot;install-docker-ce&quot;&gt;Install Docker CE&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg&lt;/td&gt;
          &lt;td&gt;apt-key add -&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;echo “deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -sc) stable” &amp;gt; /etc/apt/sources.list.d/docker-ce.list&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;apt install docker-ce&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;enable-docker-and-containerd-to-run-on-system-boot&quot;&gt;Enable Docker and Containerd to run on system boot&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;systemctl enable –now docker containerd&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;running-docker-as-a-non-root-user&quot;&gt;Running Docker as a non-root user&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;exit # Back to normal user&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sudo usermod -aG docker ${USER}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Done&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2020 23:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/linux/install-docker-ce-on-ubuntu-20-04.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/linux/install-docker-ce-on-ubuntu-20-04.html</guid>
        
        <category>install</category>
        
        <category>docker</category>
        
        <category>container</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Install GNS3 on Ubuntu 20.04</title>
        <description>&lt;h3 id=&quot;install-gns3&quot;&gt;Install GNS3&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo add-apt-repository ppa:gns3/ppa&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt install gns3-server gns3-gui&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;install-iou-support-optional&quot;&gt;Install IOU Support (Optional)&lt;/h3&gt;

&lt;p&gt;IOU (IOS over Unix) is an internal Cisco tool for simulating the ASICs in Cisco Switches. This enables you to play with Layer 2 switching in your LABS.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg --add-architecture i386&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt install gns3-iou&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;add-your-user-to-the-following-groups&quot;&gt;Add your user to the following groups:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;ubridge libvirt kvm wireshark&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2020 22:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/linux/install-gns3-on-ubuntu-20-04.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/linux/install-gns3-on-ubuntu-20-04.html</guid>
        
        <category>install</category>
        
        <category>gns3</category>
        
        <category>networking</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Tor On Android</title>
        <description>&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install Termux from Google Playstore.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open Termux, then install tor (“pkg update &amp;amp;&amp;amp; pkg install”).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run tor for tunneling:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Tunneling over HTTP “tor –HTTPTunnelPort 8118”.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;For more details pls read tor docs (“pkg install man &amp;amp;&amp;amp; man tor”).&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install Firefox browser from Google Playstore.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open Firefox, type “about:config” in the URL bar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set “network.proxy.type” to “1” (Configure proxy manually).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set “network.proxy.http” to “127.0.0.1”, and “network.proxy.http.port” to “8118”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note*)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;By default Tor opening socks(x) listener on 127.0.0.1:9050.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can use Tor config file ($PREFIX/etc/tor/torrc) instead of passing Tor command line args.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firefox =&amp;gt; Tor local proxy (socks(x)/http/etc) =&amp;gt; Tor network (proxy =&amp;gt; proxy =&amp;gt; proxy ….)&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jul 2020 00:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/android/tor-on-android.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/android/tor-on-android.html</guid>
        
        <category>proxy</category>
        
        <category>tunnel</category>
        
        <category>anonymity</category>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>Unlock Nokia 3 Bootloader</title>
        <description>&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Enable developer options&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enable OEM Unlocking (OEM Unlock)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enable USB debugging mode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change default USB configuration, choose File Transfer (MTP)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install adb and fastboot (sudo apt-get install android-tools-adb android-tools-fastboot)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install nokia usb drive&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connect your phone to your PC and approve all usb connection&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Type “adb devices”, then it will show the serial number&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Type “adb reboot bootloader”, then your devices will boot into fastboot mode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Type “fastboot devices”, to make sure that your device still connected to your PC and it will show your phone serial number&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Type “fastboot oem key $(echo -n “YOUR_PHONE_SERIAL_NUMBER”&lt;/td&gt;
          &lt;td&gt;md5sum&lt;/td&gt;
          &lt;td&gt;tr [a-z] [A-Z])”&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Type “fastboot flashing unlock”, your phone will ask you about unlocking bootloader&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Press vol up (yes)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 02 Jul 2020 17:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/android/unlock-nokia-3-bootloader.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/android/unlock-nokia-3-bootloader.html</guid>
        
        <category>bootloader</category>
        
        <category>unlocking</category>
        
        <category>rooting</category>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>Fix RTL8822BE driver on Debian based system</title>
        <description>&lt;p&gt;Below script tested on Kali Linux 2020.1b (Kernel 5.4.0)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /lib/firmware/rtw88
&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /lib/firmware/rtlwifi/rtl8822befw.bin /lib/firmware/rtw88/rtw8822b_fw.bin
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!--more--&gt;
</description>
        <pubDate>Thu, 16 Apr 2020 06:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/linux/fix-rtl8822be-driver-on-debian-based-system.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/linux/fix-rtl8822be-driver-on-debian-based-system.html</guid>
        
        <category>driver</category>
        
        <category>wifi</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>ARP - MITM Detection Method</title>
        <description>&lt;p&gt;Sedikit tengan ARP&lt;/p&gt;

&lt;p&gt;ARP merupakan protokol yang digunakan untuk memetakan alamat fisik (MAC) dan logika (IP). Proses pemetaan ini sering dimanfaatkan oleh penyerang dengan cara memalsukan isi dari peta (ARP table) tersebut sehingga ia dapat menguasai komunikasi yang bergantung pada isi dari peta tersebut (routing).&lt;/p&gt;

&lt;p&gt;Berikut metode yang saya gunakan untuk mendeteksi proses pemalsuan tersebut.&lt;/p&gt;

&lt;p&gt;Disini saya menggunakan TCP-Syn untuk memancing penyerang. Kenapa? Karena jika menggunakan protokol seperti ICMP maka penyerang bisa saja membuat firewall untuk mem-blok semua paket ICMP yang datang.&lt;/p&gt;

&lt;p&gt;Dengan menggunakan TCP-Syn dengan port yang kita buat acak, pengerang tentu tidak dapat menebak port tersebut dan memblok nya.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Di bawah ini adalah coret2 saya dahulu kala.&lt;/p&gt;

&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/uploads/2019-08-31-arp-mitm-detaction-method-1.png&quot; /&gt;
&lt;/figure&gt;

&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/uploads/2019-08-31-arp-mitm-detaction-method-2.png&quot; /&gt;
&lt;/figure&gt;

&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/uploads/2019-08-31-arp-mitm-detaction-method-3.png&quot; /&gt;
&lt;/figure&gt;

&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/uploads/2019-08-31-arp-mitm-detaction-method-4.png&quot; /&gt;
&lt;/figure&gt;
</description>
        <pubDate>Sat, 31 Aug 2019 17:45:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/security/arp-mitm-detaction-method.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/security/arp-mitm-detaction-method.html</guid>
        
        <category>mitm</category>
        
        <category>security</category>
        
        <category>networking</category>
        
        
        <category>security</category>
        
      </item>
    
      <item>
        <title>RSA Small Key Problem</title>
        <description>&lt;p&gt;Given public key = (7, 33).&lt;/p&gt;

&lt;p&gt;Find private key (d).&lt;/p&gt;

&lt;p&gt;n = 33 (modulus)&lt;/p&gt;

&lt;p&gt;e = 7 (exponent)&lt;/p&gt;

&lt;p&gt;let’s factoring n&lt;/p&gt;

&lt;p&gt;n = p * q&lt;/p&gt;

&lt;p&gt;33 = ? * ?&lt;/p&gt;

&lt;p&gt;floor(sqrt(n)) = floor(sqrt(33)) = 5&lt;/p&gt;

&lt;p&gt;33 mod 5 = 3 « not 0&lt;/p&gt;

&lt;p&gt;33 mod 4 = 1 « no need to test (except for 2 all other prime numbers are odd)&lt;/p&gt;

&lt;p&gt;33 mod 3 = 0 « we got p = 3&lt;/p&gt;

&lt;p&gt;p = 3&lt;/p&gt;

&lt;p&gt;33 = 3 * ?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;q = n / p&lt;/p&gt;

&lt;p&gt;= 33 / 3&lt;/p&gt;

&lt;p&gt;= 11&lt;/p&gt;

&lt;p&gt;n = p * q&lt;/p&gt;

&lt;p&gt;= 3 * 33&lt;/p&gt;

&lt;p&gt;phi = ((p-1) * (q-1))&lt;/p&gt;

&lt;p&gt;= (2 * 10)&lt;/p&gt;

&lt;p&gt;= 20&lt;/p&gt;

&lt;p&gt;e * ? mod 20 = 1&lt;/p&gt;

&lt;p&gt;7 * ? mod 20 = 1  « modInv&lt;/p&gt;

&lt;p&gt;7 * 3 mod 20 = 1&lt;/p&gt;

&lt;p&gt;ok, d = 3&lt;/p&gt;

&lt;p&gt;private key (d) = (3, 33)&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Aug 2019 03:39:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/security/rsa-small-key-problem.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/security/rsa-small-key-problem.html</guid>
        
        <category>algorithm</category>
        
        <category>math</category>
        
        <category>security</category>
        
        
        <category>security</category>
        
      </item>
    
      <item>
        <title>RSA Algorithm</title>
        <description>&lt;p&gt;Key Generation&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Generate two random primes, p and q, e.g p=3, q=11.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compute n = pq, n = 3 * 11 = 33.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compute phi = (p-1)(q-1) = (3-1)(11-1) = 20&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose an integer e, 1 &amp;lt; e &amp;lt; phi, such that gcd(e, phi) = 1, e.g e = 7, gcd(7, 20) = 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compute the secret exponent d, 1 &amp;lt; d &amp;lt; phi, such that (e * d) mod phi = 1, (7 * d) mod 20 = 1,  d = 3&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;ol&gt;
  &lt;li&gt;The public key is (7, 33) and the private key (3, 33).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Encrypt&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;m = 2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;c = 2^7 mod 33 = 29&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Decrypt&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;c = 29&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;m = 29 ^ 3 mod&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;n is known as the modulus.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;e is known as the public exponent or encryption exponent or just the exponent.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;d is known as the secret exponent or decryption exponent.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 30 Aug 2019 05:34:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/cryptography/rsa-example.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/cryptography/rsa-example.html</guid>
        
        <category>cryptography</category>
        
        <category>security</category>
        
        <category>math</category>
        
        <category>algorithm</category>
        
        
        <category>cryptography</category>
        
      </item>
    
      <item>
        <title>Miller Rabin</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/primality-test-set-3-miller-rabin&quot;&gt;read more&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Aug 2019 15:23:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/math/miller-rabin.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/math/miller-rabin.html</guid>
        
        <category>cryptography</category>
        
        <category>security</category>
        
        <category>math</category>
        
        <category>algorithm</category>
        
        
        <category>math</category>
        
      </item>
    
      <item>
        <title>Square and Multiply</title>
        <description>&lt;p&gt;11^37 = ?&lt;/p&gt;

&lt;p&gt;37 = 100101 in binary&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1 -&amp;gt; fist one list number          = 11&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0 -&amp;gt; square                                    = (11)^2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0 -&amp;gt; square                                    = ((11)^2)^2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1 -&amp;gt; square + multiply              = (((11)^2)^2)^2*11&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0 -&amp;gt; square                                    = ((((11)^2)^2)^2*11)^2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1 -&amp;gt; square + multiply              = (((((11)^2)^2)^2*11)^2)^2*11&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;simple-implementation-in-python&quot;&gt;Simple implementation in python&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# x ^ h mod n
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;modPow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# convert h into binary
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 29 Aug 2019 14:35:00 +0000</pubDate>
        <link>https://www.ardikars.com/post/math/square-and-multiply-example.html</link>
        <guid isPermaLink="true">https://www.ardikars.com/post/math/square-and-multiply-example.html</guid>
        
        <category>cryptography</category>
        
        <category>security</category>
        
        <category>math</category>
        
        <category>algorithm</category>
        
        
        <category>math</category>
        
      </item>
    
  </channel>
</rss>
